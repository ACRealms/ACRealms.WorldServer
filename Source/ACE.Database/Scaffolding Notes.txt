

Requires dotnet ef to be installed first:
  dotnet tool install --global dotnet-ef

If the DB schema is updated, here are the commands to run.
The first three commands require a Config.js file in the default "Debug" build output folder
Commands to run (change the connection string as needed)

dotnet ef dbcontext optimize --project=ACE.Database --context=ShardDbContext --output-dir CompiledModels/Shard
dotnet ef dbcontext optimize --project=ACE.Database --context=WorldDbContext --output-dir CompiledModels/World
dotnet ef dbcontext optimize --project=ACE.Database --context=AuthDbContext --output-dir CompiledModels/Auth

dotnet ef dbcontext scaffold "server=localhost;port=3306;user=root;password=root;database=realms_shard;TreatTinyAsBoolean=false" "Pomelo.EntityFrameworkCore.MySql" --project=ACE.Database --context=ShardDbContext -o Models/Shard --no-pluralize --force --no-onconfiguring
dotnet ef dbcontext scaffold "server=localhost;port=3306;user=root;password=root;database=realms_world;TreatTinyAsBoolean=false" "Pomelo.EntityFrameworkCore.MySql" --project=ACE.Database --context=WorldDbContext -o Models/World --no-pluralize --force --no-onconfiguring
dotnet ef dbcontext scaffold "server=localhost;port=3306;user=root;password=root;database=realms_auth;TreatTinyAsBoolean=false" "Pomelo.EntityFrameworkCore.MySql" --project=ACE.Database --context=AuthDbContext -o Models/Auth --no-pluralize --force --no-onconfiguring
