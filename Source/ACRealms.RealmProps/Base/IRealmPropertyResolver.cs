using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ACRealms.RealmProps.Base
{
    /// <summary>
    /// 
    /// </summary>
    /// <typeparam name="TContext"></typeparam>
    /// <typeparam name="TResult"></typeparam>
    public interface IRealmPropertyResolver<TContext, TResult>
    {
        /// <summary>
        /// Fetches the property
        /// </summary>
        /// <param name="context"></param>
        /// <returns></returns>
        TResult Fetch(TContext context);
    }

    // THIS FILE IS AUTOMATICALLY GENERATED

}

namespace ACRealms
{
    public static partial class Props
    {
        public static partial class Core
        {
            public interface ICreatureContext { }
            /// <summary>
            /// Properties related to instance selection (don't use unless you know what you're doing)
            /// </summary>
            public static partial class Instance
            {
                // <summary>When recalling, determines which mode to use to select the realm or instance.</summary>
                //public static int RecallInstanceSelectMode(ctx, ) = (ctx) =>
                //{
                    //var a = RealmPropertyInt.Core_Instance_RecallInstanceSelectMode;
                //    return 1;
                //};
                // <summary>When using a portal, determines which mode to use to select the realm or instance.</summary>
               // public const RealmPropertyInt PortalInstanceSelectMode = RealmPropertyInt.Core_Instance_PortalInstanceSelectMode;
            }
        }
    }
}
