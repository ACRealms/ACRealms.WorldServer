//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace ACRealms.RealmProps.IntermediateModels;
public readonly partial struct RealmPropertySchema
{
    public readonly partial struct GroupEntity
    {
        /// <summary>
        /// Generated from JSON Schema.
        /// </summary>
        /// <remarks>
        /// <para>
        /// Property names in this group will be prefixed with this value
        /// </para>
        /// </remarks>
        public readonly partial struct PropertyNamesInThisGroupWillBePrefixedWithThisValue
        {
            /// <summary>
            /// Conversion to <see cref = "ACRealms.RealmProps.IntermediateModels.RealmPropertySchema.PropNameEntity"/>.
            /// </summary>
            /// <param name = "value">The value from which to convert.</param>
            public static implicit operator ACRealms.RealmProps.IntermediateModels.RealmPropertySchema.PropNameEntity(PropertyNamesInThisGroupWillBePrefixedWithThisValue value)
            {
                if ((value.backing & Backing.JsonElement) != 0)
                {
                    return new(value.AsJsonElement);
                }

                if ((value.backing & Backing.String) != 0)
                {
                    return new(value.stringBacking);
                }

                return ACRealms.RealmProps.IntermediateModels.RealmPropertySchema.PropNameEntity.Undefined;
            }

            /// <summary>
            /// Conversion from <see cref = "ACRealms.RealmProps.IntermediateModels.RealmPropertySchema.PropNameEntity"/>.
            /// </summary>
            /// <param name = "value">The value from which to convert.</param>
            public static explicit operator PropertyNamesInThisGroupWillBePrefixedWithThisValue(ACRealms.RealmProps.IntermediateModels.RealmPropertySchema.PropNameEntity value)
            {
                if (value.HasJsonElementBacking)
                {
                    return new(value.AsJsonElement);
                }

                return value.ValueKind switch
                {
                    JsonValueKind.String => new((string)value),
                    _ => Undefined
                };
            }
        }
    }
}